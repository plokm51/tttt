
package tjtoolbar;

import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.File;
import javax.swing.*;


public class TJToolBar {
    JFrame jf=new JFrame("User Interfaces");    //利用JFrame這個class 來New出一個新的物件jf;
    JToolBar Northtoolbar = new JToolBar();          //利用JToolBar這個class 來new 出toolbar這個物件;
    JToolBar Westtoolbar = new JToolBar();
    JToolBar Easttoolbar = new JToolBar();
    JToolBar Southtoolbar = new JToolBar();
    JToolBar jtoolbar5 = new JToolBar();
    JToolBar jtoolbar6 = new JToolBar();
    String fnameGloble;                         //為了存取方法中fname絕對檔案路徑而設置的字串型態全域變數;
    Point getPoint = new Point();               //同上;
    JPanel panel = new JPanel();
    
    TJToolBar(){     
           
        String path1 = "C:" + File.separator + "Users"+ File.separator+"User"+ File.separator +"Desktop"+ File.separator+"java"+ File.separator+"1.PNG";
        Icon icon1 = new ImageIcon(path1);
                                                //String 宣告path1然後檔案位置，new 出一個新的imageIcon讓他的建構函式接收path1
      
        String path2 = "C:" + File.separator + "Users"+ File.separator+"User"+ File.separator +"Desktop"+ File.separator+"java"+ File.separator+"2.PNG";
        Icon icon2 = new ImageIcon(path2);
        
        String path3 = "C:" + File.separator + "Users"+ File.separator+"User"+ File.separator +"Desktop"+ File.separator+"java"+ File.separator+"3.PNG";
        Icon icon3 = new ImageIcon(path3);
        
        String path4 = "C:" + File.separator + "Users"+ File.separator+"User"+ File.separator +"Desktop"+ File.separator+"java"+ File.separator+"4.PNG";
        Icon icon4 = new ImageIcon(path4);
        
        String path5 = "C:" + File.separator + "Users"+ File.separator+"User"+ File.separator +"Desktop"+ File.separator+"java"+ File.separator+"5.PNG";
        Icon icon5 = new ImageIcon(path5);
        
        String path6 = "C:" + File.separator + "Users"+ File.separator+"User"+ File.separator +"Desktop"+ File.separator+"java"+ File.separator+"6.PNG";
        Icon icon6 = new ImageIcon(path6);
        
        String path7 = "C:" + File.separator + "Users"+ File.separator+"User"+ File.separator +"Desktop"+ File.separator+"java"+ File.separator+"7.PNG";
        Icon icon7 = new ImageIcon(path7);
        
        
        JButton File = new JButton(icon1);
        JButton Last = new JButton(icon2);
        JButton Next = new JButton(icon3);
        JButton TCan = new JButton(icon4);
        JButton greenPlus = new JButton(icon5);
        JButton lastButton = new JButton(icon6);
        JLabel  mytoolbar = new JLabel ("工具列");
        
        Northtoolbar.add(File);
        Northtoolbar.add(Last);
        Northtoolbar.add(Next);
        Northtoolbar.add(TCan);
        Northtoolbar.add(greenPlus);
        Northtoolbar.add(lastButton);
        Northtoolbar.add(mytoolbar);
        
        Westtoolbar.setLayout(null);
        Westtoolbar.setLayout(new GridLayout(4,1,1,10));
        JButton OptionButton = new JButton("選項按鈕");
        Westtoolbar.add(OptionButton);
        
        JButton textbox =  new JButton("文字方塊");
        Westtoolbar.add(textbox);
        
        JButton newImage = new JButton(icon7);
        Westtoolbar.add(newImage);
        
        JLabel mytoolbar2 = new JLabel("工具欄");
        Westtoolbar.add(mytoolbar2);
        
        Easttoolbar.setLayout(null);
        Easttoolbar.setLayout(new GridLayout(3,1,0,50));
        
        JButton layer = new JButton("圖層");
        Easttoolbar.add(layer);
        
        JLabel nofunction1 = new JLabel(" ");
        Easttoolbar.add(nofunction1);
        
        JLabel nofunction2 = new JLabel(" ");
        Easttoolbar.add(nofunction2);
        
        JLabel imagecontainer = new JLabel();               //做為新增圖片的container
        panel.add(imagecontainer);
        
        JLabel talkwatch = new JLabel("對話總覽");
        talkwatch.setBounds(0,0,100,100);
        Southtoolbar.add(talkwatch);
        
        /*JButton tool11 = new JButton("插入背景");
        jtoolbar5.add(tool11);*/
        
        jf.add(Northtoolbar,BorderLayout.NORTH);
        jf.add(Westtoolbar,BorderLayout.WEST);
        jf.add(Easttoolbar,BorderLayout.EAST);
        jf.add(Southtoolbar,BorderLayout.SOUTH);
        jf.add(panel,BorderLayout.CENTER);
        
        //tool9要先存在編譯才會過，所以放在這裡
        class FileChooser extends JFrame implements ActionListener {     
            int i = 0;   
            JPanel imgPane;      
            public FileChooser() {   
            newImage.addActionListener(this);   
            imgPane = new JPanel();   
            }   
       
    public void actionPerformed(ActionEvent e) {   
        if(e.getSource()==newImage) {   
            JFileChooser chooseFile = new JFileChooser();  
            int returnVal = chooseFile.showOpenDialog(null);   
            
            if(returnVal == chooseFile.APPROVE_OPTION) {   
                if(i!=0) {   
                    imgPane.remove(imagecontainer);                      
                }   
            i++;   
            File f = chooseFile.getSelectedFile();   
            String fname = f.getAbsolutePath();
            System.out.println(fname);
            fnameGloble = fname;
            imagecontainer.setIcon(new ImageIcon(fname));   
            imagecontainer.setHorizontalAlignment(JLabel.CENTER);             //圖片居中
            getPoint = imagecontainer.getLocation();                          //取label6的座標位置回傳給全域變數getPoint
            imgPane.add(imagecontainer,BorderLayout.CENTER);   
            jf.add(imgPane,BorderLayout.CENTER);   
            }   
        }   
    }   
}      
        class DragPanel extends JPanel{
 
        ImageIcon image = new ImageIcon(fnameGloble);
        final int WIDTH = image.getIconWidth();
        final int HEIGHT = image.getIconHeight();
        Point imageCorner;
        Point prevPt;
 
        DragPanel(){  
            imageCorner = new Point(350,250);
            ClickListener clickListener = new ClickListener();
            DragListener dragListener = new DragListener();
            this.addMouseListener(clickListener);
            this.addMouseMotionListener(dragListener);
        }
 
        public void paintComponent(Graphics g) {
            System.out.println(fnameGloble);
            super.paintComponent(g);
            image.paintIcon(this, g, (int)imageCorner.getX(), (int)imageCorner.getY());
 }
 
        class ClickListener extends MouseAdapter{
            public void mousePressed(MouseEvent e) {
                System.out.print(imageCorner);
                prevPt = e.getPoint();
    }
}
 
        class DragListener extends MouseMotionAdapter{
            public void mouseDragged(MouseEvent e) { 
            Point currentPt = e.getPoint();
            imageCorner.translate(     
            (int)(currentPt.getX() - prevPt.getX()),
            (int)(currentPt.getY() - prevPt.getY())
        );
        prevPt = currentPt;
        repaint();   
    }  
   }
}
        DragPanel dragPanel = new DragPanel();      //new出一個DragPanel類別的物件dragPanel
          
        FileChooser fc = new FileChooser();         //new出FileChooser類別的物件fc
        
        jf.add(dragPanel);                          //利用container的物件jf來呼叫add函式並傳入dragPanel作為引數
        
        jf.add(panel);
        
        jf.setPreferredSize(new Dimension(700, 500));
        jf.pack();
        jf.setBackground(Color.black);
        jf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        jf.setVisible(true);
        
    };
    public static void main(String[] args) {
        new TJToolBar();
    }
}
